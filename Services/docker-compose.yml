version: "3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - driver_app_network
    restart: always
    volumes:
      - ./.docker/zookeeper:/var/lib/zookeeper/data
      - ./.docker/zookeeper/log:/var/lib/zookeeper/log
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:7.3.1
    hostname: broker
    container_name: broker
    networks:
      - driver_app_network
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    volumes:
      - ./.docker/kafka:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL_CONTAINER:PLAINTEXT,HOST:PLAINTEXT, EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL_CONTAINER://broker:29092,HOST://localhost:9092, EXTERNAL://192.168.10.8:9101
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL_CONTAINER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.1
    hostname: control-center
    container_name: control-center
    restart: always
    networks:
      - driver_app_network
    depends_on:
      - broker
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker:29092"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      PORT: 9021

  init-topics:
    image: confluentinc/cp-server:7.3.1
    networks:
      - driver_app_network
    command:
      - bash
      - -c
      - |
        sleep 30
        kafka-topics --create --topic=init.routes --if-not-exists --bootstrap-server=broker:29092
        kafka-topics --create --topic=tracing.routes --if-not-exists --bootstrap-server=broker:29092
    depends_on:
      - broker

  simulator-app:
    build: Simulator/.
    container_name: route-simulator
    image: simulator-app
    restart: always
    networks:
      - driver_app_network
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - KAFKA_CONSUMER_GROUP_ID=init.routes.01
      - KAFKA_START_ROUTES_CONSUMER_TOPIC=init.routes
      - KAFKA_START_ROUTES_PRODUCER_TOPIC=tracing.routes
    depends_on:
      - broker

  driver-api:
    build: API/.
    container_name: driver-api
    image: driver-api
    networks:
      - driver_app_network
    ports:
      - 5000:80
    environment:
      - MONGODB_CONNECTION_STRING=mongodb://root:password@mongodb:27017
      - MONGODB_DATABASE=driver_service_database
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - KAFKA_CONSUMER_GROUP_ID=tracing.routes.01
      - KAFKA_START_ROUTES_CONSUMER_TOPIC=tracing.routes
      - KAFKA_START_ROUTES_PRODUCER_TOPIC=init.routes
    depends_on:
      - broker

  mongodb:
    image: mongo:6.0.4
    container_name: mongodb
    restart: always
    networks:
      - driver_app_network
    ports:
      - 8000:27017
    volumes:
      - ./.docker/dbdata:/data/db
      - ./.docker/mongo:/docker-entrypoint-initdb.d
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=driver_service_database

networks:
  driver_app_network:
    name: driver_app_network
    driver: bridge
